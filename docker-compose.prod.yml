version: '3.8'

services:
<<<<<<< HEAD

  db:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - db-data:/var/lib/postgresql/data
=======
  db:
>>>>>>> main
    networks:
      - backend_network

  backend:
<<<<<<< HEAD
    container_name: ${BACKEND_CONTAINER_NAME}
    image: ${BACKEND_IMAGE_NAME}
    environment:
      DB_HOST: db
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
    depends_on:
      - db
=======
    environment:
      - ENVIRONMENT=production
>>>>>>> main
    networks:
      - backend_network

  frontend:
<<<<<<< HEAD
    container_name: ${FRONTEND_CONTAINER_NAME}
    image: ${FRONTEND_IMAGE_NAME}
    depends_on:
      - backend
    networks:
      - frontend_network

  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    image: ${NGINX_IMAGE_NAME}
    ports:
      - "${NGINX_HOSTPORT}:80"
    depends_on:
      - frontend
    volumes:
      - ./nginx:/etc/nginx/
    networks:
      - frontend_network
      - backend_network

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge

volumes:
  db-data:
=======
    environment:
      - ENVIRONMENT=production
    networks:
      - backend_network

  nginx:
    ports:
      - "80:80"  # Only expose Nginx on port 80 in production
    networks:
      - backend_network
      - frontend_network

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge
>>>>>>> main
